//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// <responsibility>
//     Especification Pattern used in the Data Layer to filter the sets of
//     data entities.
// </responsibility>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Linq;

namespace IngematicaAngularBase.Dal.Specification
{
	public static partial class OptimizacionHistorialSpecification
	{
		public static IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> WithIdOptimizacionHistorial(this IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdOptimizacionHistorial == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> WithNombre(this IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> source, string value)
		{
			if (value != null)
				return source.Where(p => p.Nombre == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> WithContainsNombre(this IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> source, string value)
		{
			if (value != null)
				return source.Where(p => p.Nombre.Contains(value));
			
			return source;
		}


		public static IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> WithCantidadPersonas(this IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.CantidadPersonas == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> WithEscala(this IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> source, string value)
		{
			if (value != null)
				return source.Where(p => p.Escala == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> WithContainsEscala(this IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> source, string value)
		{
			if (value != null)
				return source.Where(p => p.Escala.Contains(value));
			
			return source;
		}


		public static IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> WithOptimizarCosto(this IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> source, bool? value)
		{
			if (value != null)
				return source.Where(p => p.OptimizarCosto == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> WithCostoMaximo(this IQueryable<IngematicaAngularBase.Model.Entities.OptimizacionHistorial> source, float? value)
		{
			if (value != null)
				return source.Where(p => p.CostoMaximo == value);
			
			return source;
		}
	}
}
