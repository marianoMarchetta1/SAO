//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// <responsibility>
//     Especification Pattern used in the Data Layer to filter the sets of
//     data entities.
// </responsibility>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Linq;

namespace IngematicaAngularBase.Dal.Specification
{
	public static partial class PedidoProductoCajonSpecification
	{
		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoCajon> WithIdPedidoProductoCajon(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoCajon> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdPedidoProductoCajon == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoCajon> WithIdPedidoProductoProceso(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoCajon> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdPedidoProductoProceso == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoCajon> WithCajon(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoCajon> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.Cajon == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoCajon> WithCantidad(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoCajon> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.Cantidad == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoCajon> WithEmbalado(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoCajon> source, bool? value)
		{
			if (value != null)
				return source.Where(p => p.Embalado == value);
			
			return source;
		}
	}
}
