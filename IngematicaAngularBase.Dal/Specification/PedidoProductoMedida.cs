//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// <responsibility>
//     Especification Pattern used in the Data Layer to filter the sets of
//     data entities.
// </responsibility>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Linq;

namespace IngematicaAngularBase.Dal.Specification
{
	public static partial class PedidoProductoMedidaSpecification
	{
		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> WithIdPedidoProductoMedida(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdPedidoProductoMedida == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> WithIdPedido(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdPedido == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> WithIdMedida(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdMedida == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> WithCantidad(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.Cantidad == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> WithCantidadDespachada(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.CantidadDespachada == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> WithFechaEntrega(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> source, System.DateTime? value)
		{
			if (value != null)
				return source.Where(p => p.FechaEntrega == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> WithFechaEntregaBetweenWithTime(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.FechaEntrega >= lower);

            if (upper != null)
                range = range.Where(p => p.FechaEntrega <= upper);

            return range;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> WithFechaEntregaBetween(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.FechaEntrega >= lower);

            if (upper != null)
			{
				upper = upper.Value.Date.AddDays(1);
                range = range.Where(p => p.FechaEntrega < upper);
			}

            return range;
		}


		public static IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> WithScrapTotal(this IQueryable<IngematicaAngularBase.Model.Entities.PedidoProductoMedida> source, decimal? value)
		{
			if (value != null)
				return source.Where(p => p.ScrapTotal == value);
			
			return source;
		}
	}
}
