//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// <responsibility>
//     Especification Pattern used in the Data Layer to filter the sets of
//     data entities.
// </responsibility>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Linq;

namespace IngematicaAngularBase.Dal.Specification
{
	public static partial class EmbalajeBultoSpecification
	{
		public static IQueryable<IngematicaAngularBase.Model.Entities.EmbalajeBulto> WithIdEmbalajeBulto(this IQueryable<IngematicaAngularBase.Model.Entities.EmbalajeBulto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdEmbalajeBulto == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.EmbalajeBulto> WithIdEmbalaje(this IQueryable<IngematicaAngularBase.Model.Entities.EmbalajeBulto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdEmbalaje == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.EmbalajeBulto> WithCantidad(this IQueryable<IngematicaAngularBase.Model.Entities.EmbalajeBulto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.Cantidad == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.EmbalajeBulto> WithIdPedidoProductoMedida(this IQueryable<IngematicaAngularBase.Model.Entities.EmbalajeBulto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdPedidoProductoMedida == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.EmbalajeBulto> WithScrap(this IQueryable<IngematicaAngularBase.Model.Entities.EmbalajeBulto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.Scrap == value);
			
			return source;
		}
	}
}
