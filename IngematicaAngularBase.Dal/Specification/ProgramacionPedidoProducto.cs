//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// <responsibility>
//     Especification Pattern used in the Data Layer to filter the sets of
//     data entities.
// </responsibility>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Linq;

namespace IngematicaAngularBase.Dal.Specification
{
	public static partial class ProgramacionPedidoProductoSpecification
	{
		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithIdProgramacionPedidoProducto(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdProgramacionPedidoProducto == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithIdPedidoProductoMedida(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdPedidoProductoMedida == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithIdInyectoraEstacion(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdInyectoraEstacion == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithCantidad(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.Cantidad == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithFechaMinimaInicio(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? value)
		{
			if (value != null)
				return source.Where(p => p.FechaMinimaInicio == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithFechaMinimaInicioBetweenWithTime(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.FechaMinimaInicio >= lower);

            if (upper != null)
                range = range.Where(p => p.FechaMinimaInicio <= upper);

            return range;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithFechaMinimaInicioBetween(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.FechaMinimaInicio >= lower);

            if (upper != null)
			{
				upper = upper.Value.Date.AddDays(1);
                range = range.Where(p => p.FechaMinimaInicio < upper);
			}

            return range;
		}


		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithHoraInicio(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? value)
		{
			if (value != null)
				return source.Where(p => p.HoraInicio == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithHoraInicioBetweenWithTime(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.HoraInicio >= lower);

            if (upper != null)
                range = range.Where(p => p.HoraInicio <= upper);

            return range;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithHoraInicioBetween(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.HoraInicio >= lower);

            if (upper != null)
			{
				upper = upper.Value.Date.AddDays(1);
                range = range.Where(p => p.HoraInicio < upper);
			}

            return range;
		}


		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithFechaProgramadaFin(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? value)
		{
			if (value != null)
				return source.Where(p => p.FechaProgramadaFin == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithFechaProgramadaFinBetweenWithTime(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.FechaProgramadaFin >= lower);

            if (upper != null)
                range = range.Where(p => p.FechaProgramadaFin <= upper);

            return range;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithFechaProgramadaFinBetween(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.FechaProgramadaFin >= lower);

            if (upper != null)
			{
				upper = upper.Value.Date.AddDays(1);
                range = range.Where(p => p.FechaProgramadaFin < upper);
			}

            return range;
		}


		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithHoraProgramadaFin(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? value)
		{
			if (value != null)
				return source.Where(p => p.HoraProgramadaFin == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithHoraProgramadaFinBetweenWithTime(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.HoraProgramadaFin >= lower);

            if (upper != null)
                range = range.Where(p => p.HoraProgramadaFin <= upper);

            return range;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithHoraProgramadaFinBetween(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.HoraProgramadaFin >= lower);

            if (upper != null)
			{
				upper = upper.Value.Date.AddDays(1);
                range = range.Where(p => p.HoraProgramadaFin < upper);
			}

            return range;
		}


		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithCambioMolde(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, bool? value)
		{
			if (value != null)
				return source.Where(p => p.CambioMolde == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithHorasProgramadas(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.HorasProgramadas == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithFecha(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? value)
		{
			if (value != null)
				return source.Where(p => p.Fecha == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithFechaBetweenWithTime(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.Fecha >= lower);

            if (upper != null)
                range = range.Where(p => p.Fecha <= upper);

            return range;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithFechaBetween(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, System.DateTime? lower, System.DateTime? upper)
		{
            var range = source;
           
            if (lower != null)
                range = range.Where(p => p.Fecha >= lower);

            if (upper != null)
			{
				upper = upper.Value.Date.AddDays(1);
                range = range.Where(p => p.Fecha < upper);
			}

            return range;
		}


		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithIdUsuario(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdUsuario == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithIdReprogramacion(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, int? value)
		{
			if (value != null)
				return source.Where(p => p.IdReprogramacion == value);
			
			return source;
		}

		public static IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> WithReinyeccion(this IQueryable<IngematicaAngularBase.Model.Entities.ProgramacionPedidoProducto> source, bool? value)
		{
			if (value != null)
				return source.Where(p => p.Reinyeccion == value);
			
			return source;
		}
	}
}
